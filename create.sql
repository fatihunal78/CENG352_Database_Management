CREATE SEQUENCE CITIES_SEQ
	START WITH 1
	INCREMENT BY 1
	MINVALUE 1;


CREATE TABLE CITIES  (	
	cid 		INTEGER,
	name 		VARCHAR (40)	NOT NULL,
	country		VARCHAR (40),
	PRIMARY KEY (cid)
);


CREATE TABLE AIRPORTS (
	code		VARCHAR (10),
	name		VARCHAR (40),
	status		VARCHAR (20),
	cid		INTEGER,
	PRIMARY KEY (code),
	FOREIGN KEY (cid) REFERENCES CITIES(cid)
);


CREATE SEQUENCE PILOTS_SEQ
	START WITH 1
	INCREMENT BY 1
	MINVALUE 1;


CREATE TABLE PILOTS (
	pid 		INTEGER,
	name 		VARCHAR (40)	NOT NULL,
	phone 		VARCHAR (20),
	address 	VARCHAR (80),
	PRIMARY KEY (pid)
);


CREATE SEQUENCE STAFF_SEQ
	START WITH 1
	INCREMENT BY 1
	MINVALUE 1;


CREATE TABLE STAFF (
	sid 		INTEGER,
	phone		VARCHAR (20),
	name 		VARCHAR (40)	NOT NULL,
	address 	VARCHAR (80),
	PRIMARY KEY (sid)
);


CREATE TABLE AIRLINES (	
	name		VARCHAR (40),
	PRIMARY KEY (name)
);


CREATE TABLE PLANECAPACITY (
	type		VARCHAR(32),
	economy_cap	INTEGER DEFAULT 0,
	business_cap	INTEGER DEFAULT 0,
	PRIMARY KEY (type)
);


CREATE SEQUENCE PLANETYPE_SEQ 
	START WITH 1
	INCREMENT BY 1
	MINVALUE 1;


CREATE TABLE PLANETYPE (
	planeid		INTEGER,
	type 		VARCHAR (32) NOT NULL,
	PRIMARY KEY (planeid),
	FOREIGN KEY (type) REFERENCES PLANECAPACITY (type)
);


CREATE TABLE SEATS (
	seatno 		INTEGER,
	planeid		INTEGER,
	category 	VARCHAR (10),
	PRIMARY KEY (seatno, planeid),
	FOREIGN KEY (planeid) REFERENCES PLANETYPE(planeid)
		ON DELETE CASCADE
);


CREATE TABLE AIRLINEHASPLANE (
	airline		VARCHAR (40),
	planeid 	INTEGER,
	PRIMARY KEY (airline, planeid),
	FOREIGN KEY (airline) REFERENCES AIRLINES (name)
		ON DELETE CASCADE,
	FOREIGN KEY (planeid) REFERENCES PLANETYPE (planeid)
		ON DELETE CASCADE
); 


CREATE SEQUENCE FLIGHTS_SEQ
	START WITH 1
	INCREMENT BY 1
	MINVALUE 1;


CREATE TABLE FLIGHTS (
	flightno	INTEGER,
	time		VARCHAR (10) NOT NULL,
	fdate		DATE NOT NULL,
	duration 	INTEGER NOT NULL,
	status		VARCHAR (20),
	dptr_airport	VARCHAR (10) NOT NULL,
	arrv_airport	VARCHAR (10) NOT NULL,
	airlinename	VARCHAR(40) NOT NULL,
	planeid		INTEGER NOT NULL,
	PRIMARY KEY (flightno),
	UNIQUE (planeid, fdate, time),
	FOREIGN  KEY (dptr_airport) REFERENCES AIRPORTS (code)
		ON DELETE CASCADE,
	FOREIGN KEY (arrv_airport) REFERENCES AIRPORTS (code)
		ON DELETE CASCADE,
	FOREIGN KEY (airlinename) REFERENCES AIRLINES (name)
		ON DELETE CASCADE,
	FOREIGN KEY (planeid) REFERENCES PLANETYPE (planeid)
		ON DELETE CASCADE
);


CREATE TABLE FLIGHTPILOT (
	flightno	INTEGER,
	pid		INTEGER,
	PRIMARY KEY (flightno, pid),
	FOREIGN KEY (flightno) REFERENCES FLIGHTS (flightno)
		ON DELETE CASCADE,
	FOREIGN KEY (pid) REFERENCES PILOTS (pid)
		ON DELETE CASCADE
);


CREATE TABLE FLIGHTSTAFF (
	flightno	INTEGER,
	sid		INTEGER,
	PRIMARY KEY (flightno, sid),
	FOREIGN KEY (flightno) REFERENCES FLIGHTS (flightno)
		ON DELETE CASCADE,
	FOREIGN KEY (sid) REFERENCES STAFF (sid)
		ON DELETE CASCADE
);


CREATE SEQUENCE CUSTOMERS_SEQ
	START WITH 1
	INCREMENT BY 1
	MINVALUE 1;

CREATE TABLE CUSTOMERS (
	cid 		INTEGER,
	name 		VARCHAR (40) NOT NULL,
	address 	VARCHAR (80),
	PRIMARY KEY (cid)
);


CREATE SEQUENCE RESERVES_SEQ
	START WITH 1
	INCREMENT BY 1
	MINVALUE 1;


CREATE TABLE RESERVES (
	reserveid	INTEGER,
	cid 		INTEGER NOT NULL,
	flightno	INTEGER NOT NULL,
	resdate		DATE NOT NULL,
	fee		REAL NOT NULL,
	status 		VARCHAR (20),
	seatno		INTEGER NOT NULL,
	PRIMARY KEY (reserveid),
	UNIQUE (flightno, seatno),
	FOREIGN KEY (cid) REFERENCES CUSTOMERS(cid)
		ON DELETE CASCADE,
	FOREIGN KEY (flightno) REFERENCES FLIGHTS (flightno)
		ON DELETE CASCADE
);


CREATE TABLE CUSTOMEREMAIL (
	cid		INTEGER,
	address		VARCHAR (60),
	PRIMARY KEY (cid, address),
	FOREIGN KEY (cid) REFERENCES CUSTOMERS (cid)
		ON DELETE CASCADE
);


CREATE TABLE CUSTOMERPHONE (
	cid		INTEGER,
	phonenumber	VARCHAR (20),
	PRIMARY KEY (cid, phonenumber),
	FOREIGN KEY (cid) REFERENCES CUSTOMERS (cid)
		ON DELETE CASCADE
);


CREATE TABLE CUSTOMERFAX (
	cid		INTEGER,
	faxnumber	VARCHAR (20),
	PRIMARY KEY (cid, faxnumber),
	FOREIGN KEY (cid) REFERENCES CUSTOMERS (cid)
		ON DELETE CASCADE
);
	
commit;

